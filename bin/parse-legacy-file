#!/usr/bin/env bash

## Parse the legacy file found by asdf to determine the version of the tool.
## https://asdf-vm.com/plugins/create.html#bin-parse-legacy-file

## -----------------------
## Customization functions

# kc_asdf_main() {
#   return 0
# }

_kc_asdf_custom_parse_version_file() {
  local ns="parse-file.version"
  local filepath="$1" query
  if [[ "$filepath" =~ go.(mod|work)$ ]]; then
    query="$(grep 'go\s*[0-9]' "$filepath" |
      sed -E -e 's/go\s*//' |
      tr -d ' ')"
  elif [ -f "$filepath" ]; then
    query="$(cat "$filepath")"
  fi

  ## copied code from latest-stable.sh
  kc_asdf_load_addon "tags"
  local tmpfile filter="^\\s*go"
  tmpfile="$(kc_asdf_tags_list)"
  tmpfile="$(kc_asdf_tags_only "$tmpfile" "$filter")"
  tmpfile="$(kc_asdf_tags_format "$tmpfile" "$filter")"
  tmpfile="$(kc_asdf_tags_only "$tmpfile" "^\\s*$query")"
  command -v _kc_asdf_custom_filter >/dev/null &&
    tmpfile="$(_kc_asdf_custom_filter "$tmpfile" "$query")"
  tmpfile="$(kc_asdf_tags_stable "$tmpfile")"
  tmpfile="$(kc_asdf_tags_sort "$tmpfile")"
  kc_asdf_debug "$ns" "final tags read from %s" "$tmpfile" &&
    tail -n1 "$tmpfile" &&
    __asdf_if_not_debug rm "$tmpfile"
}

## -----------------------

set -euo pipefail

export KC_ASDF_PLUGIN_ENTRY_PATH=${BASH_SOURCE[0]}
export KC_ASDF_PLUGIN_ENTRY_NAME
KC_ASDF_PLUGIN_ENTRY_NAME="$(basename "$KC_ASDF_PLUGIN_ENTRY_PATH")"
export KC_ASDF_PLUGIN_PATH
KC_ASDF_PLUGIN_PATH=$(dirname "$(dirname "$KC_ASDF_PLUGIN_ENTRY_PATH")")

# shellcheck source-path=SCRIPTDIR/../lib/commands.sh
source "$KC_ASDF_PLUGIN_PATH/lib/commands.sh" "$@"
